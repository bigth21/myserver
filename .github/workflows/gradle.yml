# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
#       uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#       with:
#         arguments: build
#     TODO: Need test code related policy
      run : ./gradlew clean build  
    - name: Make Directory for deliver
      run: mkdir deploy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
    - name: Make zip file
      run: zip -r -qq -j ./springboot-intro-build.zip ./deploy
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_IAM_DEPLOY_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_IAM_DEPLOY_SECRET_KEY }}
        aws-region: ap-northeast-2
    - name: Deliver to AWS S3
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \ 
        ./springboot-intro-build.zip s3://${{ secrets.AWS_S3_BUCKET }}/
